name: Run pytest tests

on:
  workflow_call:
    inputs:
      pipenv:
        description: 'Use pipenv'
        default: false
        required: false
        type: boolean
      pipenv-install-options:
        description: 'Pipenv installation options'
        default: ""
        required: false
        type: string
      requirements:
        description: 'Requirements file name'
        default: 'requirements-test.txt'
        required: false
        type: string
      pytest_opts:
        description: 'Additional pytest options'
        default: ''
        required: false
        type: string
      python-versions:
        description: 'Supported python versions'
        default: '["3.7", "3.8", "3.9", "3.10", "3.11"]'
        required: false
        type: string
      os:
        description: 'Operating system to run tests on'
        default: 'ubuntu-latest'
        required: false
        type: string
      fail_on_codecov_error:
        description: 'Whether pipeline should fail if there would be an error on codecov side.'
        default: false
        required: false
        type: bool
    secrets:
      codecov_token:
        description: 'Codecov token'
        required: false

jobs:
  pytests:
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
    env:
      OS: ${{ inputs.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
    - uses: fizyk/actions-reuse/.github/actions/pip@v1.7.0
      if: ${{ inputs.pipenv == false }}
      with:
        python-version: ${{ matrix.python-version }}
        requirements: ${{ inputs.requirements }}
        command: pytest -v --cov --cov-report=xml ${{ inputs.pytest_opts }}
    - uses: fizyk/actions-reuse/.github/actions/pipenv@v1.7.0
      if: ${{ inputs.pipenv == true }}
      with:
        python-version: ${{ matrix.python-version }}
        pipenv-install-options: ${{ inputs.pipenv-install-options }}
        command: pytest -v --cov --cov-report=xml ${{ inputs.pytest_opts }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.1
      with:
        token: ${{ secrets.codecov_token }}
        flags: unittests
        env_vars: OS,PYTHON
        fail_ci_if_error: ${{ inputs.fail_on_codecov_error }}
