name: Run pytest tests

on:
  workflow_call:
    inputs:
      pipenv-install-options:
        description: 'Pipenv installation options'
        default: ""
        required: false
        type: string
      cache:
        description: "Cache python environment?"
        default: true
        required: false
        type: boolean
      requirements:
        description: 'Requirements file name'
        required: false
        type: string
      pytest_opts:
        description: 'Additional pytest options'
        default: ''
        required: false
        type: string
      python-versions:
        description: 'Supported python versions'
        default: '["3.9", "3.10", "3.11", "3.12", "3.13"]'
        required: false
        type: string
      allow-prereleases:
        description: "Allow falling back to pre-release versions of Python when a matching GA version of Python is not available."
        default: true
        type: boolean
      os:
        description: 'Operating system to run tests on'
        default: 'ubuntu-latest'
        required: false
        type: string
      fail_on_codecov_error:
        description: 'Whether pipeline should fail if there would be an error on codecov side.'
        default: false
        required: false
        type: boolean
    secrets:
      codecov_token:
        description: 'Codecov token'
        required: false

jobs:
  pytests:
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
    env:
      OS: ${{ inputs.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v4.0.0
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: ${{ inputs.allow-prereleases }}
          cache: ${{ inputs.cache }}
          requirements: ${{ inputs.requirements }}
          command: pytest -v --cov --cov-report=xml ${{ inputs.pytest_opts }}
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v4.0.0
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: ${{ inputs.allow-prereleases }}
          cache: ${{ inputs.cache }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: pytest -v --cov --cov-report=xml ${{ inputs.pytest_opts }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.codecov_token }}
          flags: unittests
          env_vars: OS,PYTHON
          fail_ci_if_error: ${{ inputs.fail_on_codecov_error }}
