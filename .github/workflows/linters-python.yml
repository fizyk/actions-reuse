name: Run linters

on:
  workflow_call:
    inputs:
      pipenv:
        description: 'Use pipenv'
        default: false
        required: false
        type: boolean
      pipenv-install-options:
        description: 'Pipenv installation options'
        default: ""
        required: false
        type: string
      requirements:
        description: 'Requirements file name'
        default: 'requirements-lint.txt'
        required: false
        type: string
      python-version:
        default: "3.11"
        required: false
        type: string
      pydocstyle:
        description: 'Flag to run pydocstyle on code or not'
        type: boolean
        required: false
        default: true
      pydocstyle-paths:
        description: 'Path to run pydocstyle on'
        type: string
        required: false
        default: "."
      pycodestyle:
        description: 'Flag to run pycodestyle on code or not'
        type: boolean
        required: false
        default: true
      pycodestyle-paths:
        description: 'Path to run pycodestyle on'
        type: string
        required: false
        default: "."
      black:
        description: 'Flag to run black on code or not'
        type: boolean
        required: false
        default: true
      black-paths:
        description: 'Path to run black on'
        type: string
        required: false
        default: "."
      mypy:
        description: 'Flag to run mypy on code or not'
        type: boolean
        required: false
        default: false
      mypy-paths:
        description: 'Path to run mypy on'
        type: string
        required: false
        default: "."
      pylint:
        description: 'Flag to run pylint on code or not'
        type: boolean
        required: false
        default: false
      pylint-paths:
        description: 'Path to run pylint on'
        type: string
        required: false
        default: "."
      rst:
        description: 'Flag to run rst on code or not'
        type: boolean
        required: false
        default: false
      rst-paths:
        description: 'Path to run black on'
        type: string
        required: false
        default: "*.rst"

jobs:
  pydocstyle:
    if: ${{ inputs.pydocstyle }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: fizyk/actions-reuse/.github/actions/pip@v1.5.1
      if: ${{ inputs.pipenv == false }}
      with:
        python-version: ${{ inputs.python-version }}
        requirements: ${{ inputs.requirements }}
        command: pydocstyle src/ tests/
    - uses: fizyk/actions-reuse/.github/actions/pipenv@v1.5.1
      if: ${{ inputs.pipenv == true }}
      with:
        python-version: ${{ inputs.python-version }}
        command: pydocstyle ${{ inputs.pydocstyle-paths }}

  pycodestyle:
    if: ${{ inputs.pycodestyle }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: fizyk/actions-reuse/.github/actions/pip@v1.5.1
      if: ${{ inputs.pipenv == false }}
      with:
        python-version: ${{ inputs.python-version }}
        requirements: ${{ inputs.requirements }}
        command: pycodestyle src/ tests/
    - uses: fizyk/actions-reuse/.github/actions/pipenv@v1.5.1
      if: ${{ inputs.pipenv == true }}
      with:
        python-version: ${{ inputs.python-version }}
        pipenv-install-options: ${{ inputs.pipenv-install-options }}
        command: pycodestyle ${{ inputs.pycodestyle-paths }}

  black:
    if: ${{ inputs.black }}
    runs-on: ubuntu-latest
    steps:
    - uses: fizyk/actions-reuse/.github/actions/pip@v1.5.1
      if: ${{ inputs.pipenv == false }}
      with:
        python-version: ${{ inputs.python-version }}
        requirements: ${{ inputs.requirements }}
        command: black --diff --check src/ tests/
    - uses: fizyk/actions-reuse/.github/actions/pipenv@v1.5.1
      if: ${{ inputs.pipenv == true }}
      with:
        python-version: ${{ inputs.python-version }}
        pipenv-install-options: ${{ inputs.pipenv-install-options }}
        command: black --diff --check ${{ inputs.black-paths }}

  mypy:
    if: ${{ inputs.mypy }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v1.5.1
        if: ${{ inputs.pipenv == false }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: mypy src/ tests/
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v1.5.1
        if: ${{ inputs.pipenv == true }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: mypy ${{ inputs.mypy-paths }}


  pylint:
    if: ${{ inputs.pylint }}
    runs-on: ubuntu-latest
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v1.5.1
        if: ${{ inputs.pipenv == false }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: pylint src/ tests
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v1.5.1
        if: ${{ inputs.pipenv == true }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: pylint --recursive y .

  rst:
    if: ${{ inputs.rst }}
    runs-on: ubuntu-latest
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v1.5.1
        if: ${{ inputs.pipenv == false }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: rst-lint *.rst
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v1.5.1
        if: ${{ inputs.pipenv == true }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: rst-lint ${{ inputs.rst-paths }}
