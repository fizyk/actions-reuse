name: Run linters

on:
  workflow_call:
    inputs:
      pipenv-install-options:
        description: 'Pipenv installation options'
        default: ""
        required: false
        type: string
      requirements:
        description: 'Requirements file name'
        required: false
        type: string
      python-version:
        default: "3.12"
        required: false
        type: string
      pydocstyle:
        description: 'Flag to run pydocstyle on code or not'
        type: boolean
        required: false
        default: false
      pydocstyle-paths:
        description: 'Path to run pydocstyle on'
        type: string
        required: false
        default: "."
      pycodestyle:
        description: 'Flag to run pycodestyle on code or not'
        type: boolean
        required: false
        default: false
      pycodestyle-paths:
        description: 'Path to run pycodestyle on'
        type: string
        required: false
        default: "."
      black:
        description: 'Flag to run black on code or not'
        type: boolean
        required: false
        default: false
      black-paths:
        description: 'Path to run black on'
        type: string
        required: false
        default: "."
      mypy:
        description: 'Flag to run mypy on code or not'
        type: boolean
        required: false
        default: false
      mypy-paths:
        description: 'Path to run mypy on'
        type: string
        required: false
        default: "."
      pylint:
        description: 'Flag to run pylint on code or not'
        type: boolean
        required: false
        default: false
      rst:
        description: 'Flag to run rst on code or not'
        type: boolean
        required: false
        default: false
      rst-paths:
        description: 'Path to run rst on'
        type: string
        required: false
        default: "*.rst"
      rstcheck:
        description: 'Flag to run rstcheck on rst file or not'
        type: boolean
        required: false
        default: false
      ruff:
        description: 'Flag to run ruff linter on code or not'
        type: boolean
        required: false
        default: false
      ruff-paths:
        description: 'Path to run ruff on'
        type: string
        required: false
        default: "."

jobs:
  pydocstyle:
    if: ${{ inputs.pydocstyle }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v2.4.1
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: pydocstyle ${{ inputs.pydocstyle-paths }}
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.1
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: pydocstyle ${{ inputs.pydocstyle-paths }}

  pycodestyle:
    if: ${{ inputs.pycodestyle }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v2.4.1
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: pycodestyle ${{ inputs.pycodestyle-paths }}
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.1
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: pycodestyle ${{ inputs.pycodestyle-paths }}

  black:
    if: ${{ inputs.black }}
    runs-on: ubuntu-latest
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v2.4.1
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: black --diff --check  ${{ inputs.black-paths }}
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.1
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: black --diff --check ${{ inputs.black-paths }}

  mypy:
    if: ${{ inputs.mypy }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v2.4.1
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: mypy ${{ inputs.mypy-paths }}
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.1
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: mypy ${{ inputs.mypy-paths }}


  pylint:
    if: ${{ inputs.pylint }}
    runs-on: ubuntu-latest
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v2.4.1
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: pylint --recursive y .
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.1
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: pylint --recursive y .

  rst:
    if: ${{ inputs.rst }}
    runs-on: ubuntu-latest
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v2.4.1
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: rst-lint ${{ inputs.rst-paths }}
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.1
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: rst-lint ${{ inputs.rst-paths }}

  rstcheck:
    if: ${{ inputs.rstcheck }}
    runs-on: ubuntu-latest
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v2.4.1
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: rstcheck -r .
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.1
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: rstcheck -r .

  ruff:
    if: ${{ inputs.ruff }}
    runs-on: ubuntu-latest
    steps:
      - uses: fizyk/actions-reuse/.github/actions/pip@v2.4.1
        if: ${{ inputs.requirements != '' }}
        with:
          python-version: ${{ inputs.python-version }}
          requirements: ${{ inputs.requirements }}
          command: ruff check ${{ inputs.ruff-paths }}
      - uses: fizyk/actions-reuse/.github/actions/pipenv@v2.4.1
        if: ${{ inputs.requirements == '' }}
        with:
          python-version: ${{ inputs.python-version }}
          pipenv-install-options: ${{ inputs.pipenv-install-options }}
          command: ruff check ${{ inputs.ruff-paths }}
